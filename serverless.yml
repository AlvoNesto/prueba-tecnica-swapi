service: serverless-app

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  profile: alvaro
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - !Ref StarWarsEntitiesTable.Arn

functions:
  # NEW DATA:
  GetNewFilmsFunction:
    name: GetNewFilmsFunction
    handler: dist/main.handler
    timeout: 30
    events:
      - httpApi:
          path: /new/films
          method: get
  GetNewFilmByIdFunction:
    name: GetNewFilmByIdFunction
    handler: dist/main.handler
    timeout: 30
    events:
      - httpApi:
          path: /new/films/{id}
          method: get
  CreateNewFilmFunction:
    name: CreateNewFilmFunction
    handler: dist/main.handler
    timeout: 30
    events:
      - httpApi:
          path: /new/films
          method: post
  UpdateNewFilmFunction:
    name: UpdateNewFilmFunction
    handler: dist/main.handler
    timeout: 30
    events:
      - httpApi:
          path: /new/films/{id}
          method: put
  DeleteNewFilmFunction:
    name: DeleteNewFilmFunction
    handler: dist/main.handler
    timeout: 30
    events:
      - httpApi:
          path: /new/films/{id}
          method: delete
  
  # OLD DATA:
  GetOldFilmsFunction:
    name: GetOldFilmsFunction
    handler: dist/main.handler
    timeout: 30
    events:
      - httpApi:
          path: /old/films
          method: get
  GetOldFilmsByIdFunction:
    name: GetOldFilmsByIdFunction
    handler: dist/main.handler
    timeout: 30
    events:
      - httpApi:
          path: /old/films/{id}
          method: get
  
  GetOldPeopleFunction:
    name: GetOldPeopleFunction
    handler: dist/main.handler
    timeout: 30
    events:
      - httpApi:
          path: /old/people
          method: get
  GetOldPeopleByIdFunction:
    name: GetOldPeopleByIdFunction
    handler: dist/main.handler
    timeout: 30
    events:
      - httpApi:
          path: /old/people/{id}
          method: get

resources:
  Resources:
    StarWarsEntitiesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: StarWarsEntitiesTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: entidad
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: entidad
            KeyType: RANGE
    CounterStarWarsEntitiesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "CounterStarWarsEntitiesTable"
        AttributeDefinitions:
          - AttributeName: entidad
            AttributeType: S
        KeySchema:
          - AttributeName: entidad
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST